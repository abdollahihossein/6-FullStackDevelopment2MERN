Week 7 & 8
-----------------------------------------------------------------------------------
1. What is the difference between React JS and React Native?

React JS is used to build the user interface of web applications (that is, apps that run on a web browser), while React Native is used to build applications that run on both iOS and Android devices (that is, cross-platform mobile applications)
React uses HTML, CSS and JavaScript to create interactive user interfaces. React Native, on the other hand, uses native UI components and APIs to create mobile apps.


2. Is React a framework or library?  What is the difference?

React is a library, not a framework.
The main criteria for frameworks are: Frameworks provide ready-to-use tools, standards and templates for fast application development and libraries do not. React is concerned only with rendering the UI and leaves many things up to each project to put together.


3. What are the differences between HTML and JSX?

JSX stands for JavaScript XML. JSX allows us to write HTML in React. JSX makes it easier to write and add HTML in React.
JSX is an addition to the JavaScript syntax which is a mixture of both HTML and JavaScript. JSX performs optimization while compiling the source code to JavaScript. JSX is not supported by Browsers.


4. What makes React attractive for our case?

React basically allows developers to utilize individual parts of their application on both the client-side and the server-side, which ultimately boosts the speed of the development process. In React, you develop your applications by creating reusable components that you can think of as independent Lego blocks.
-----------------------------------------------------------------------------------
MERN:

What are some alternative tech stacks?

1. LAMP:

LAMP is an industry-standard when it comes to tech stack models. In web development, it delivers the best cost efficiency, flexibility, and performance. It is an acronym that stands for:

-Linux (operating system)
-Apache (HTTP server)
-MySQL (relational database management)
-PHP (programming language, it can also be Perl or Python)

2. ASP.NET:

Applications built using .NET commonly use the following application tech stack:

-ASP.NET MVC – Standard model-view-controller framework
-IIS – Microsoft’s web server
-Angular frontend framework with TypeScript
-SQL Server – Microsoft’s enterprise database
-Microsoft Azure – A favorite of most .NET developers

3. MEAN:

One of the well-known tech stacks, MEAN brings numerous benefits to web developers. Among these benefits are the use of a single language (JavaScript) and the underlying technologies are open source and free. MEAN consists of:

-MongoDB (NoSQL database)
-Express.js backend web framework
-Angular.js frontend framework
-Node.js server-side JavaScript

4. MERN:

Essentially MERN is similar to MEAN. The difference is that you change Angular.js with React.
The key benefits of using MERN are the React integration, the ability to use code on browsers and servers simultaneously, powerful library, and full-stack development option (frontend and backend).
Additionally, React is known for its flexibility and performance in developing interactive user interfaces.

5. MEVN:

Another variation of MEAN, MEVN uses Vue.js as the frontend web framework instead of Angular.js. Over the years, Vue.js has grown in popularity. It incorporates the best features of Angular and React.
Vue.js is easy to learn, delivers a clear programming style, and provides superb performance for web applications.

6. Ruby on Rails:

Ruby on Rails is a programming environment that uses Ruby, a dynamic programming language. With RoR, you can simplify the entire development process.
Ruby on Rails works well with HTML, CSS, and JavaScript for creating UIs and JSON or XML for transferring data.

7. Python:

One of the fastest-growing languages is Python. It is easy to use and commonly taught to college students as a beginner development language. It has many modern and powerful features. Python has also become very popular because of its heavy usage for machine learning and data science. It can also be used for building web applications by using the popular Django web framework.

8. Java:

Java is not as popular as it once was. It is popular for enterprise applications, but new projects tend to gravitate to newer and lighter-weight application stacks like Node.js and Python. Java is still heavily used and there are lots of Java developers all over the world.
-----------------------------------------------------------------------------------
Why is MERN a good choice for full development?

The main purpose of using MERN stack is to develop apps using JavaScript only. This is because the four technologies that make up the technology stack are all JS-based. Thus, if one knows JavaScript (and JSON), the backend, frontend, and database can be operated easily.
Indeed, this stack, in addition to using high-performance and customized technologies, allows for web applications and software to be developed very quickly.
The MERN Stack is highly scalable and can handle large amounts of data and traffic.
-----------------------------------------------------------------------------------
Two existing MERN templates:

1. 
https://github.com/mohamedsamara/mern-ecommerce

An ecommerce store built with MERN stack, and utilizes third party API's.


2. 
https://github.com/shamahoque/mern-social

A simple social media application with users, posts, likes and comments - developed using React, Node, Express and MongoDB.
